//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WikiRaterWeb.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("http://localhost:13800")]
        public string CurrentDomain {
            get {
                return ((string)(this["CurrentDomain"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Rate on WikiRater")]
        public string RateOnWikiRaterText {
            get {
                return ((string)(this["RateOnWikiRaterText"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("TikiHead")]
        public string RegCode {
            get {
                return ((string)(this["RegCode"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("^[a-zA-Z0-9_\\.\\-]{3,}$")]
        public string UsernameRegex {
            get {
                return ((string)(this["UsernameRegex"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool LogAllURLs {
            get {
                return ((bool)(this["LogAllURLs"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"javascript:(function(){{f='{0}/Vote.aspx?Article='+encodeURIComponent(window.location.href);a=function(){{if(!window.open(f+'noui=1&jump=doclose','wikivoter','location=yes,links=no,scrollbars=no,toolbar=no,width=550,height=370'))location.href=f+'jump=yes'}};if(/Firefox/.test(navigator.userAgent)){{setTimeout(a,0)}}else{{a()}}}})()")]
        public string Bookmarklet {
            get {
                return ((string)(this["Bookmarklet"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("^.*(wiki/|index.php\\?title=)([\\w\\(\\)\\.\'%,/!\\-:]+)(noui)?.*?$")]
        public string WikiTitleRegex {
            get {
                return ((string)(this["WikiTitleRegex"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$")]
        public string emailRegex {
            get {
                return ((string)(this["emailRegex"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("The e-mail address you entered doesn\'t seem to be valid.")]
        public string EmailFailedMatchMessage {
            get {
                return ((string)(this["EmailFailedMatchMessage"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Usernames must be greater than tC:\\Users\\joe\\Dropbox\\Personal\\WikiRater\\WikiRater" +
            "Web\\Web.confighree characters and only contain only a-z 0-9, _, -, .")]
        public string UsernameFailedMatchMessage {
            get {
                return ((string)(this["UsernameFailedMatchMessage"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("WikiRater")]
        public string WikiRaterName {
            get {
                return ((string)(this["WikiRaterName"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("7")]
        public int RatingExpirationDays {
            get {
                return ((int)(this["RatingExpirationDays"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<div class=\"Achievement\"><img src=\"{0}\" /><strong>{1}</strong> - {2}</div>")]
        public string AchievementFormat {
            get {
                return ((string)(this["AchievementFormat"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<div class=\"Achievement\"><strong>{0}</strong> - {1}</div>")]
        public string AchievementFormatNoIcon {
            get {
                return ((string)(this["AchievementFormatNoIcon"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool AllowLegacyHash {
            get {
                return ((bool)(this["AllowLegacyHash"]));
            }
        }
    }
}
